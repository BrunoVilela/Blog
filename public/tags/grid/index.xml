<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grid on R tutorials for macroecology</title>
    <link>/tags/grid/</link>
    <description>Recent content in Grid on R tutorials for macroecology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/grid/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mapping plants phylogenetic diversity</title>
      <link>/2018/02/12/mapping-plant-richness/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/12/mapping-plant-richness/</guid>
      <description>library(BIEN) library(rgdal) library(letsR) require(maptools) library(ggplot2) library(ape) library(classInt) genus_vector &amp;lt;- c(&amp;quot;Pinus&amp;quot;) temp_dir &amp;lt;- file.path(tempdir(), &amp;quot;BIEN_temp&amp;quot;)#Set a working directory sp &amp;lt;- BIEN_ranges_genus(genus_vector, temp_dir) list_species &amp;lt;- unique(gsub(&amp;quot;\\..*&amp;quot;, &amp;quot;&amp;quot;, list.files(temp_dir))) shapes &amp;lt;- list() for (i in 1:length(list_species)) { shapes[[i]] &amp;lt;- rgdal::readOGR(dsn = temp_dir, layer = list_species[i], verbose = FALSE) } all_shapes &amp;lt;- do.call(rbind, shapes) colnames(all_shapes@data) &amp;lt;- &amp;quot;binomial&amp;quot; # Plot colors &amp;lt;- rainbow(length(unique(all_shapes@data$binomial)), alpha = 0.5) position &amp;lt;- match(all_shapes@data$binomial, unique(all_shapes@data$binomial)) colors &amp;lt;- colors[position] plot(all_shapes, col = colors, lty = 0, main = &amp;quot;Spatial polygons&amp;quot;) map(add = TRUE) PAM &amp;lt;- lets.</description>
    </item>
    
    <item>
      <title>Transfom a matrix of species presence absence into a PresenceAbsence object</title>
      <link>/2018/01/24/transfom-a-matrix-of-species-presence-absence-into-a-presenceabsence-object/</link>
      <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/24/transfom-a-matrix-of-species-presence-absence-into-a-presenceabsence-object/</guid>
      <description>Most of letsR package functions require a PresenceAbsence object (see previous post). But some users may already have a matrix of species presence absence (PAM) generated somewhere else or created using the lets.presab.grid function. In this post I will show how to transform these PAM files into a PresenceAbsence object.
First, note that this will only be possible if your grid used to generate the PAM is a square or a rectangular grid.</description>
    </item>
    
    <item>
      <title>A guide to transform species distributions into a presence absence matrix based on a user-defined grid in R</title>
      <link>/2018/01/23/a-guide-to-transform-species-shapefiles-into-a-presence-absence-matrix-based-on-a-user-defined-grid-system/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/23/a-guide-to-transform-species-shapefiles-into-a-presence-absence-matrix-based-on-a-user-defined-grid-system/</guid>
      <description>Species distribution are largely available in online databases, such as the distributions ranges in IUCN, or the occurrence records in GBIF. However, to analyze these kind of data most of the time it is necessary to transform the spatial distribution of species into a presence absence matrix or into a grid format. In this tutorial I will show how to easily make this transformation using the R package letsR, written by myself and Fabricio Villalobos.</description>
    </item>
    
  </channel>
</rss>